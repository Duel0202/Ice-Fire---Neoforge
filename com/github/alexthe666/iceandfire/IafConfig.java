package com.github.alexthe666.iceandfire;

import com.github.alexthe666.iceandfire.config.ConfigHolder;
import net.neoforge.fml.config.ModConfig;

public class IafConfig {
   public static boolean customMainMenu = true;
   public static boolean useVanillaFont = false;
   public static boolean generateDragonSkeletons = true;
   public static int generateDragonSkeletonChance = 300;
   public static int generateDragonDenChance = 260;
   public static int generateDragonRoostChance = 480;
   public static int dragonDenGoldAmount = 4;
   public static boolean spawnGlaciers = true;
   public static int glacierSpawnChance = 4;
   public static int oreToStoneRatioForDragonCaves = 45;
   public static int dragonEggTime = 7200;
   public static int dragonGriefing = 0;
   public static boolean tamedDragonGriefing = true;
   public static int dragonFlapNoiseDistance = 4;
   public static int dragonFluteDistance = 8;
   public static double dragonHealth = 500.0D;
   public static int dragonAttackDamage = 17;
   public static double dragonAttackDamageFire = 2.0D;
   public static double dragonAttackDamageIce = 2.5D;
   public static double dragonAttackDamageLightning = 3.5D;
   public static int maxDragonFlight = 256;
   public static int dragonGoldSearchLength = 30;
   public static boolean canDragonsHealFromBiting;
   public static boolean canDragonsDespawn = true;
   public static boolean doDragonsSleep = true;
   public static boolean dragonDigWhenStuck = true;
   public static int dragonBreakBlockCooldown = 5;
   public static boolean dragonDropSkull = true;
   public static boolean dragonDropHeart = true;
   public static boolean dragonDropBlood = true;
   public static int dragonTargetSearchLength = 128;
   public static int dragonWanderFromHomeDistance = 40;
   public static int dragonHungerTickRate = 3000;
   public static boolean spawnHippogryphs = true;
   public static int hippogryphSpawnRate = 2;
   public static boolean generateGorgonTemple = true;
   public static double gorgonMaxHealth = 100.0D;
   public static int spawnPixiesChance = 60;
   public static int pixieVillageSize = 5;
   public static boolean pixiesStealItems = true;
   public static int spawnWanderingCyclopsChance = 900;
   public static int spawnCyclopsCaveChance = 170;
   public static int cyclopesSheepSearchLength = 17;
   public static double cyclopsMaxHealth = 150.0D;
   public static double cyclopsAttackStrength = 15.0D;
   public static double cyclopsBiteStrength = 40.0D;
   public static boolean cyclopsGriefing = true;
   public static double sirenMaxHealth = 50.0D;
   public static boolean sirenShader = true;
   public static int sirenMaxSingTime = 12000;
   public static int sirenTimeBetweenSongs = 2000;
   public static int generateSirenChance = 400;
   public static int hippocampusSpawnChance = 40;
   public static int deathWormTargetSearchLength = 48;
   public static double deathWormMaxHealth = 10.0D;
   public static double deathWormAttackStrength = 3.0D;
   public static boolean deathWormAttackMonsters = true;
   public static int deathWormSpawnRate = 30;
   public static int cockatriceChickenSearchLength = 32;
   public static int cockatriceEggChance = 30;
   public static double cockatriceMaxHealth = 40.0D;
   public static boolean chickensLayRottenEggs = true;
   public static boolean spawnCockatrices = true;
   public static int cockatriceSpawnRate = 4;
   public static int stymphalianBirdTargetSearchLength = 48;
   public static int stymphalianBirdFeatherDropChance = 25;
   public static double stymphalianBirdFeatherAttackStength = 1.0D;
   public static int stymphalianBirdFlockLength = 40;
   public static int stymphalianBirdFlightHeight = 80;
   public static boolean stymphalianBirdsDataTagDrops = true;
   public static boolean stympahlianBirdAttackAnimals = false;
   public static int stymphalianBirdSpawnChance = 80;
   public static boolean spawnTrolls = true;
   public static int trollSpawnRate = 60;
   public static boolean trollsDropWeapon = true;
   public static double trollMaxHealth = 50.0D;
   public static double trollAttackStrength = 10.0D;
   public static boolean villagersFearDragons = true;
   public static boolean animalsFearDragons = true;
   public static int myrmexPregnantTicks = 2500;
   public static int myrmexEggTicks = 3000;
   public static int myrmexLarvaTicks = 35000;
   public static int myrmexColonyGenChance = 150;
   public static int myrmexColonySize = 80;
   public static int myrmexMaximumWanderRadius = 50;
   public static boolean myrmexHiveIgnoreDaytime = false;
   public static double myrmexBaseAttackStrength = 3.0D;
   public static boolean spawnAmphitheres = true;
   public static int amphithereSpawnRate = 50;
   public static float amphithereVillagerSearchLength = 48.0F;
   public static int amphithereTameTime = 400;
   public static double amphithereFlightSpeed = 1.75D;
   public static double amphithereMaxHealth = 50.0D;
   public static double amphithereAttackStrength = 7.0D;
   public static int seaSerpentSpawnChance = 250;
   public static boolean seaSerpentGriefing = true;
   public static double seaSerpentBaseHealth = 20.0D;
   public static double seaSerpentAttackStrength = 4.0D;
   public static double dragonsteelBaseDamage = 25.0D;
   public static int dragonsteelBaseArmor = 12;
   public static float dragonsteelBaseArmorToughness = 6.0F;
   public static int dragonsteelBaseDurability = 8000;
   public static int dragonsteelBaseDurabilityEquipment = 8000;
   public static boolean dragonMovedWronglyFix = false;
   public static boolean weezerTinkers = true;
   public static double dragonBlockBreakingDropChance = 0.1D;
   public static boolean dragonAuto3rdPerson = true;
   public static double dreadQueenMaxHealth = 750.0D;
   public static boolean generateMausoleums = true;
   public static boolean spawnLiches = true;
   public static int lichSpawnRate = 4;
   public static int lichSpawnChance = 30;
   public static double hydraMaxHealth = 250.0D;
   public static int generateHydraChance = 120;
   public static boolean explosiveDragonBreath = false;
   public static double weezerTinkersDisarmChance = 0.20000000298023224D;
   public static boolean chunkLoadSummonCrystal = true;
   public static double dangerousWorldGenDistanceLimit = 1000.0D;
   public static double dangerousWorldGenSeparationLimit = 300.0D;
   public static double dragonFlightSpeedMod = 1.0D;
   public static double hippogryphFlightSpeedMod = 1.0D;
   public static double hippocampusSwimSpeedMod = 1.0D;
   public static boolean generateGraveyards = true;
   public static double ghostMaxHealth = 30.0D;
   public static double ghostAttackStrength = 3.0D;
   public static boolean ghostsFromPlayerDeaths = true;
   public static int dragonPathfindingThreads = 3;
   public static int maxDragonPathingNodes = 5000;
   public static boolean pathfindingDebug = false;
   public static boolean dragonWeaponFireAbility = true;
   public static boolean dragonWeaponIceAbility = true;
   public static boolean dragonWeaponLightningAbility = true;
   public static int villagerHouseWeight = 5;
   public static boolean allowAttributeOverriding = true;

   public static void bakeClient(ModConfig config) {
      try {
         customMainMenu = (Boolean)ConfigHolder.CLIENT.customMainMenu.get();
         useVanillaFont = (Boolean)ConfigHolder.CLIENT.useVanillaFont.get();
         dragonAuto3rdPerson = (Boolean)ConfigHolder.CLIENT.dragonAuto3rdPerson.get();
      } catch (Exception var2) {
         IceAndFire.LOGGER.warn("An exception was caused trying to load the client config for Ice and Fire.");
         var2.printStackTrace();
      }

   }

   public static void bakeServer(ModConfig config) {
      try {
         generateDragonSkeletons = (Boolean)ConfigHolder.SERVER.generateDragonSkeletons.get();
         generateDragonSkeletonChance = (Integer)ConfigHolder.SERVER.generateDragonSkeletonChance.get();
         generateDragonDenChance = (Integer)ConfigHolder.SERVER.generateDragonDenChance.get();
         generateDragonRoostChance = (Integer)ConfigHolder.SERVER.generateDragonRoostChance.get();
         dragonDenGoldAmount = (Integer)ConfigHolder.SERVER.dragonDenGoldAmount.get();
         spawnGlaciers = (Boolean)ConfigHolder.SERVER.spawnGlaciers.get();
         glacierSpawnChance = (Integer)ConfigHolder.SERVER.glacierSpawnChance.get();
         oreToStoneRatioForDragonCaves = (Integer)ConfigHolder.SERVER.oreToStoneRatioForDragonCaves.get();
         dragonEggTime = (Integer)ConfigHolder.SERVER.dragonEggTime.get();
         dragonGriefing = (Integer)ConfigHolder.SERVER.dragonGriefing.get();
         tamedDragonGriefing = (Boolean)ConfigHolder.SERVER.tamedDragonGriefing.get();
         dragonFlapNoiseDistance = (Integer)ConfigHolder.SERVER.dragonFlapNoiseDistance.get();
         dragonFluteDistance = (Integer)ConfigHolder.SERVER.dragonFluteDistance.get();
         dragonHealth = (Double)ConfigHolder.SERVER.dragonHealth.get();
         dragonAttackDamage = (Integer)ConfigHolder.SERVER.dragonAttackDamage.get();
         dragonAttackDamageFire = (Double)ConfigHolder.SERVER.dragonAttackDamageFire.get();
         dragonAttackDamageIce = (Double)ConfigHolder.SERVER.dragonAttackDamageIce.get();
         dragonAttackDamageLightning = (Double)ConfigHolder.SERVER.dragonAttackDamageLightning.get();
         maxDragonFlight = (Integer)ConfigHolder.SERVER.maxDragonFlight.get();
         dragonGoldSearchLength = (Integer)ConfigHolder.SERVER.dragonGoldSearchLength.get();
         canDragonsHealFromBiting = (Boolean)ConfigHolder.SERVER.canDragonsHealFromBiting.get();
         canDragonsDespawn = (Boolean)ConfigHolder.SERVER.canDragonsDespawn.get();
         doDragonsSleep = (Boolean)ConfigHolder.SERVER.doDragonsSleep.get();
         dragonDigWhenStuck = (Boolean)ConfigHolder.SERVER.dragonDigWhenStuck.get();
         dragonBreakBlockCooldown = (Integer)ConfigHolder.SERVER.dragonBreakBlockCooldown.get();
         dragonDropSkull = (Boolean)ConfigHolder.SERVER.dragonDropSkull.get();
         dragonDropHeart = (Boolean)ConfigHolder.SERVER.dragonDropHeart.get();
         dragonDropBlood = (Boolean)ConfigHolder.SERVER.dragonDropBlood.get();
         dragonTargetSearchLength = (Integer)ConfigHolder.SERVER.dragonTargetSearchLength.get();
         dragonWanderFromHomeDistance = (Integer)ConfigHolder.SERVER.dragonWanderFromHomeDistance.get();
         dragonHungerTickRate = (Integer)ConfigHolder.SERVER.dragonHungerTickRate.get();
         spawnHippogryphs = (Boolean)ConfigHolder.SERVER.spawnHippogryphs.get();
         hippogryphSpawnRate = (Integer)ConfigHolder.SERVER.hippogryphSpawnRate.get();
         generateGorgonTemple = (Boolean)ConfigHolder.SERVER.generateGorgonTemple.get();
         gorgonMaxHealth = (Double)ConfigHolder.SERVER.gorgonMaxHealth.get();
         spawnPixiesChance = (Integer)ConfigHolder.SERVER.spawnPixiesChance.get();
         pixieVillageSize = (Integer)ConfigHolder.SERVER.pixieVillageSize.get();
         pixiesStealItems = (Boolean)ConfigHolder.SERVER.pixiesStealItems.get();
         spawnWanderingCyclopsChance = (Integer)ConfigHolder.SERVER.spawnWanderingCyclopsChance.get();
         spawnCyclopsCaveChance = (Integer)ConfigHolder.SERVER.spawnCyclopsCaveChance.get();
         cyclopesSheepSearchLength = (Integer)ConfigHolder.SERVER.cyclopesSheepSearchLength.get();
         cyclopsMaxHealth = (Double)ConfigHolder.SERVER.cyclopsMaxHealth.get();
         cyclopsAttackStrength = (Double)ConfigHolder.SERVER.cyclopsAttackStrength.get();
         cyclopsBiteStrength = (Double)ConfigHolder.SERVER.cyclopsBiteStrength.get();
         cyclopsGriefing = (Boolean)ConfigHolder.SERVER.cyclopsGriefing.get();
         sirenMaxHealth = (Double)ConfigHolder.SERVER.sirenMaxHealth.get();
         sirenShader = (Boolean)ConfigHolder.SERVER.sirenShader.get();
         sirenMaxSingTime = (Integer)ConfigHolder.SERVER.sirenMaxSingTime.get();
         sirenTimeBetweenSongs = (Integer)ConfigHolder.SERVER.sirenTimeBetweenSongs.get();
         generateSirenChance = (Integer)ConfigHolder.SERVER.generateSirenChance.get();
         hippocampusSpawnChance = (Integer)ConfigHolder.SERVER.hippocampusSpawnChance.get();
         deathWormTargetSearchLength = (Integer)ConfigHolder.SERVER.deathWormTargetSearchLength.get();
         deathWormMaxHealth = (Double)ConfigHolder.SERVER.deathWormMaxHealth.get();
         deathWormAttackStrength = (Double)ConfigHolder.SERVER.deathWormAttackStrength.get();
         deathWormAttackMonsters = (Boolean)ConfigHolder.SERVER.deathWormAttackMonsters.get();
         deathWormSpawnRate = (Integer)ConfigHolder.SERVER.deathWormSpawnRate.get();
         cockatriceChickenSearchLength = (Integer)ConfigHolder.SERVER.cockatriceChickenSearchLength.get();
         cockatriceEggChance = (Integer)ConfigHolder.SERVER.cockatriceEggChance.get();
         cockatriceMaxHealth = (Double)ConfigHolder.SERVER.cockatriceMaxHealth.get();
         chickensLayRottenEggs = (Boolean)ConfigHolder.SERVER.chickensLayRottenEggs.get();
         spawnCockatrices = (Boolean)ConfigHolder.SERVER.spawnCockatrices.get();
         cockatriceSpawnRate = (Integer)ConfigHolder.SERVER.cockatriceSpawnRate.get();
         stymphalianBirdTargetSearchLength = (Integer)ConfigHolder.SERVER.stymphalianBirdTargetSearchLength.get();
         stymphalianBirdFeatherDropChance = (Integer)ConfigHolder.SERVER.stymphalianBirdFeatherDropChance.get();
         stymphalianBirdFeatherAttackStength = (Double)ConfigHolder.SERVER.stymphalianBirdFeatherAttackStength.get();
         stymphalianBirdFlockLength = (Integer)ConfigHolder.SERVER.stymphalianBirdFlockLength.get();
         stymphalianBirdFlightHeight = (Integer)ConfigHolder.SERVER.stymphalianBirdFlightHeight.get();
         stymphalianBirdsDataTagDrops = (Boolean)ConfigHolder.SERVER.stymphalianBirdsDataTagDrops.get();
         stympahlianBirdAttackAnimals = (Boolean)ConfigHolder.SERVER.stympahlianBirdAttackAnimals.get();
         stymphalianBirdSpawnChance = (Integer)ConfigHolder.SERVER.stymphalianBirdSpawnChance.get();
         spawnTrolls = (Boolean)ConfigHolder.SERVER.spawnTrolls.get();
         trollSpawnRate = (Integer)ConfigHolder.SERVER.trollSpawnRate.get();
         trollsDropWeapon = (Boolean)ConfigHolder.SERVER.trollsDropWeapon.get();
         trollMaxHealth = (Double)ConfigHolder.SERVER.trollMaxHealth.get();
         trollAttackStrength = (Double)ConfigHolder.SERVER.trollAttackStrength.get();
         villagersFearDragons = (Boolean)ConfigHolder.SERVER.villagersFearDragons.get();
         animalsFearDragons = (Boolean)ConfigHolder.SERVER.animalsFearDragons.get();
         myrmexPregnantTicks = (Integer)ConfigHolder.SERVER.myrmexPregnantTicks.get();
         myrmexEggTicks = (Integer)ConfigHolder.SERVER.myrmexEggTicks.get();
         myrmexLarvaTicks = (Integer)ConfigHolder.SERVER.myrmexLarvaTicks.get();
         myrmexColonyGenChance = (Integer)ConfigHolder.SERVER.myrmexColonyGenChance.get();
         myrmexColonySize = (Integer)ConfigHolder.SERVER.myrmexColonySize.get();
         myrmexBaseAttackStrength = (Double)ConfigHolder.SERVER.myrmexBaseAttackStrength.get();
         myrmexMaximumWanderRadius = (Integer)ConfigHolder.SERVER.myrmexMaximumWanderRadius.get();
         myrmexHiveIgnoreDaytime = (Boolean)ConfigHolder.SERVER.myrmexHiveIgnoreDaytime.get();
         spawnAmphitheres = (Boolean)ConfigHolder.SERVER.spawnAmphitheres.get();
         amphithereSpawnRate = (Integer)ConfigHolder.SERVER.amphithereSpawnRate.get();
         amphithereVillagerSearchLength = (float)(Integer)ConfigHolder.SERVER.amphithereVillagerSearchLength.get();
         amphithereTameTime = (Integer)ConfigHolder.SERVER.amphithereTameTime.get();
         amphithereFlightSpeed = (Double)ConfigHolder.SERVER.amphithereFlightSpeed.get();
         amphithereMaxHealth = (Double)ConfigHolder.SERVER.amphithereMaxHealth.get();
         amphithereAttackStrength = (Double)ConfigHolder.SERVER.amphithereAttackStrength.get();
         seaSerpentSpawnChance = (Integer)ConfigHolder.SERVER.seaSerpentSpawnChance.get();
         seaSerpentGriefing = (Boolean)ConfigHolder.SERVER.seaSerpentGriefing.get();
         seaSerpentBaseHealth = (Double)ConfigHolder.SERVER.seaSerpentBaseHealth.get();
         seaSerpentAttackStrength = (Double)ConfigHolder.SERVER.seaSerpentAttackStrength.get();
         dragonsteelBaseDamage = (Double)ConfigHolder.SERVER.dragonsteelBaseDamage.get();
         dragonsteelBaseArmor = (Integer)ConfigHolder.SERVER.dragonsteelBaseArmor.get();
         dragonsteelBaseArmorToughness = ((Double)ConfigHolder.SERVER.dragonsteelBaseArmorToughness.get()).floatValue();
         dragonsteelBaseDurability = (Integer)ConfigHolder.SERVER.dragonsteelBaseDurability.get();
         dragonsteelBaseDurabilityEquipment = (Integer)ConfigHolder.SERVER.dragonsteelBaseDurabilityEquipment.get();
         dragonMovedWronglyFix = (Boolean)ConfigHolder.SERVER.dragonMovedWronglyFix.get();
         weezerTinkers = (Boolean)ConfigHolder.SERVER.weezerTinkers.get();
         dragonBlockBreakingDropChance = (Double)ConfigHolder.SERVER.dragonBlockBreakingDropChance.get();
         generateMausoleums = (Boolean)ConfigHolder.SERVER.generateMausoleums.get();
         spawnLiches = (Boolean)ConfigHolder.SERVER.spawnLiches.get();
         lichSpawnRate = (Integer)ConfigHolder.SERVER.lichSpawnRate.get();
         lichSpawnChance = (Integer)ConfigHolder.SERVER.lichSpawnChance.get();
         hydraMaxHealth = (Double)ConfigHolder.SERVER.hydraMaxHealth.get();
         generateHydraChance = (Integer)ConfigHolder.SERVER.generateHydraChance.get();
         explosiveDragonBreath = (Boolean)ConfigHolder.SERVER.explosiveDragonBreath.get();
         weezerTinkersDisarmChance = (Double)ConfigHolder.SERVER.weezerTinkersDisarmChance.get();
         chunkLoadSummonCrystal = (Boolean)ConfigHolder.SERVER.chunkLoadSummonCrystal.get();
         dangerousWorldGenDistanceLimit = (double)(Integer)ConfigHolder.SERVER.dangerousWorldGenDistanceLimit.get();
         dangerousWorldGenSeparationLimit = (double)(Integer)ConfigHolder.SERVER.dangerousWorldGenSeparationLimit.get();
         dragonFlightSpeedMod = (Double)ConfigHolder.SERVER.dragonFlightSpeedMod.get();
         hippogryphFlightSpeedMod = (Double)ConfigHolder.SERVER.hippogryphFlightSpeedMod.get();
         hippocampusSwimSpeedMod = (Double)ConfigHolder.SERVER.hippocampusSwimSpeedMod.get();
         generateGraveyards = (Boolean)ConfigHolder.SERVER.generateGraveyards.get();
         ghostMaxHealth = (Double)ConfigHolder.SERVER.ghostMaxHealth.get();
         ghostAttackStrength = (Double)ConfigHolder.SERVER.ghostAttackStrength.get();
         ghostsFromPlayerDeaths = (Boolean)ConfigHolder.SERVER.ghostSpawnFromPlayerDeaths.get();
         dragonPathfindingThreads = (Integer)ConfigHolder.SERVER.dragonPathfindingThreads.get();
         maxDragonPathingNodes = (Integer)ConfigHolder.SERVER.maxDragonPathingNodes.get();
         dragonWeaponFireAbility = (Boolean)ConfigHolder.SERVER.dragonWeaponFireAbility.get();
         dragonWeaponIceAbility = (Boolean)ConfigHolder.SERVER.dragonWeaponIceAbility.get();
         dragonWeaponLightningAbility = (Boolean)ConfigHolder.SERVER.dragonWeaponLightningAbility.get();
         villagerHouseWeight = (Integer)ConfigHolder.SERVER.villagerHouseWeight.get();
         allowAttributeOverriding = (Boolean)ConfigHolder.SERVER.allowAttributeOverriding.get();
         pathfindingDebug = (Boolean)ConfigHolder.SERVER.pathfindingDebug.get();
      } catch (Exception var2) {
         IceAndFire.LOGGER.warn("An exception was caused trying to load the common config for Ice and Fire.");
         var2.printStackTrace();
      }

   }
}
